AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: cloudformation template for Practera Cloud Projects web app + auth + cognito infrastructure

Metadata:
  Authors:
    Description: Based on AWS best practise.
  License:
    Description: Copyright 2023 Intersective PTY LTD and its affiliates. All Rights
      Reserved.

Parameters:
  StackName:
    ConstraintDescription: This will be unique string to represent our stack.
    Default: pcloud-sandbox
    Description: A client/project/product unique name for the stack to identify later.
      This string can include numbers, lowercase letters, uppercase letters, and hyphens
      (-). It cannot start or end with a hyphen (-).
    Type: String
  UserEmail:
    Description: Email of Initial user to add to pool
    Type: String
  Env:
    Description: Environment type.
    Default: dev
    Type: String
    ConstraintDescription: must specify dev,test,live.

  ## IS THIS USED?  
  CURRENTREGION:
    Default: us-east-1
    Description: The AWS Region where the Cloudformation template stored in S3 bucket
      is hosted. When using your own bucket, you must specify this value.
    Type: String

  ### You are unlikely to want to change these parameters
  EnableSPAMode:
    Type: String
    Description: Set to 'false' to disable SPA-specific features (i.e. when deploying a static site that won't interact with logout/refresh)
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  OAuthScopes:
    Type: CommaDelimitedList
    Description: The OAuth scopes to request the User Pool to add to the access token JWT
    Default: "phone, email, profile, openid, aws.cognito.signin.user.admin"
  PublicHostedZoneName:
    Description: 'The root domain name used for the sites'
    Type: String
    Default: pcloud.practeraco.de
  CallbackURLs:
    Description: 'Call back url'
    Type: String
    Default: app.pcloud.practeraco.de
  LogoutURLs:
    Description: 'logout url'
    Type: String
    Default: app.pcloud.practeraco.de
  AuthDomainSuffix:
    Description: 'auth suffix'
    Type: String
    Default: auth
  WebsiteURL:
    Description: Website URL
    Type: String
    Default: app.pcloud.practeraco.de
  PoolNameSuffix:
    Description: 'The suffix used with the userpool stack'
    Type: String
    Default: userpool


Conditions:
  GenerateClientSecret: !Equals
    - EnableSPAMode
    - "false"

Resources:

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub '${StackName}-${PoolNameSuffix}'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: False
          RequireLowercase: False
          RequireNumbers: False
          RequireSymbols: False
      Schema:
       - Name: email
         Required: true
         Mutable: true
         AttributeDataType: String
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      UsernameAttributes:
        - email
  UserPoolClient:
    DependsOn: [UserPool]
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      PreventUserExistenceErrors: ENABLED
      GenerateSecret: !If
        - GenerateClientSecret
        - true
        - false
      AllowedOAuthScopes: !Ref OAuthScopes
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        # The following sentinel value will be replaced by Auth@Edge with the CloudFront domain name (if you let Auth@Edge create the CloudFront distribution)
        # - https://example.com/will-be-replaced
        - !Sub 'https://${CallbackURLs}'

      LogoutURLs:
        # The following sentinel value will be replaced by Auth@Edge with the CloudFront domain name (if you let Auth@Edge create the CloudFront distribution)
        # - https://example.com/will-be-replaced
        - !Sub 'https://${LogoutURLs}'

  UserPoolDomain:
    DependsOn: [CustomARecordRoute53RecordSet]
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: !Sub '${StackName}-${AuthDomainSuffix}.${PublicHostedZoneName}'
      # Domain: !Sub
      #   - "auth-${StackIdSuffix}"
      #   - StackIdSuffix: !Select
      #       - 2
      #       - !Split
      #         - "/"
      #         - !Ref AWS::StackId
      CustomDomainConfig: 
        # CertificateArn: {'Fn::ImportValue': 'PcloudSharedACMCertificateArn'}
        CertificateArn: arn:aws:acm:us-east-1:757882151420:certificate/ea4670ec-c20a-4c85-94a2-a461c28ca5df

  Route53RecordSet:
    DependsOn: [UserPoolDomain]
    Type: AWS::Route53::RecordSet
    Properties:
      # HostedZoneName: {'Fn::ImportValue': !Sub '${StackName}-PublicHostedZoneName-${Env}'}
      # HostedZoneId: {'Fn::ImportValue':  'PcloudSharedPublicHostedZoneId'}
      HostedZoneId: Z23M5HHU345031
      Name: !Sub '${StackName}-${AuthDomainSuffix}.${PublicHostedZoneName}'
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt UserPoolDomain.CloudFrontDistribution


  CustomARecordRoute53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      # HostedZoneName: {'Fn::ImportValue': !Sub '${StackName}-PublicHostedZoneName-${Env}'}
      # HostedZoneId: {'Fn::ImportValue': !Sub '${StackName}-PublicHostedZoneId-${Env}'}
      HostedZoneId: Z23M5HHU345031
      Name: !Sub '${PublicHostedZoneName}'
      Type: A
      TTL: 60
      ResourceRecords:
        - 127.0.0.1



  User:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      Username: !Sub '${UserEmail}'
      UserPoolId: !Ref UserPool
      DesiredDeliveryMediums: 
        - EMAIL

Outputs:
  UserPoolArn:
    Description: User Pool Arn
    Value: !GetAtt UserPool.Arn

  UserPoolClientId:
    Description: User Pool Arn
    Value: !Ref UserPoolClient

  EnableSPAMode:
    Description: Enable SPA Mode
    Value: !Ref EnableSPAMode

  OAuthScopes:
    Description: OAuth Scopes
    Value: !Join [",", !Ref OAuthScopes]