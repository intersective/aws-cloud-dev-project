AWSTemplateFormatVersion: '2010-09-09'
Description: Empty ECS cluster that has no EC2 instances. It is designed
             to be used with AWS Fargate serverless capacity
Parameters:
  TeamName:
    Type: String
    Default: "team-1"
    Description: Team name
  Client:
    Type: String
    Default: "skillsbuild"
    Description: WBLA or IBM

Resources:
  # This is authorizes ECS to manage resources on your
  # account on your behalf. This role is likely already created on your account
  # ECSRole:
  #  Type: AWS::IAM::ServiceLinkedRole
  #  Properties:
  #    AWSServiceName: 'ecs.amazonaws.com'

  # ECS Resources
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${TeamName}-${Client}-cybersecurity-cluster
      # Configuration:
      #   ExecuteCommandConfiguration:
      #     LogConfiguration:
      #       CloudWatchLogGroupName: !Ref ECSLogGroup
          Logging: OVERRIDE

  ClusterCPAssociation:
    Type: "AWS::ECS::ClusterCapacityProviderAssociations"
    Properties:
      Cluster: !Ref ECSCluster
      CapacityProviders:
        - "FARGATE_SPOT"
      DefaultCapacityProviderStrategy:
        - Base: 1
          Weight: 1
          CapacityProvider: "FARGATE_SPOT"

  # ECSLogGroup:
  #   Type: 'AWS::Logs::LogGroup'
  #   Properties:
  #     LogGroupName: !Sub ${TeamName}-${Client}-cybersecurity-cluster-logs
  #     RetentionInDays: 30


  # This is a role which is used within Fargate to allow the Fargate agent
  # to download images, and upload logs.
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${TeamName}-${Client}-cybersecurity-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
            Condition:
              ArnLike:
                aws:SourceArn: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:*
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Path: /
      Policies:
        - PolicyName: ssm-ssh-access
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - 'ssmmessages:CreateControlChannel'
              - 'ssmmessages:CreateDataChannel'
              - 'ssmmessages:OpenControlChannel'
              - 'ssmmessages:OpenDataChannel'
              Resource: '*' 
        - PolicyName: ecs-execute-command
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - 'ecs:ExecuteCommand'
              Resource: '*'  

      # This role enables basic features of ECS. See reference:
      # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security-iam-awsmanpol.html#security-iam-awsmanpol-AmazonECSTaskExecutionRolePolicy
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

Outputs:
  ClusterName:
    Description: The ECS cluster into which to launch resources
    Value: !Ref ECSCluster
  ECSTaskExecutionRole:
    Description: The role used to start up a task
    Value: !Ref ECSTaskExecutionRole